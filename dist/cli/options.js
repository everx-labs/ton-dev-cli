"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.compilersWithNetworks = compilersWithNetworks;

var _dev = require("../dev");

var _networks = require("../networks/networks");

/*
 * Copyright 2018-2019 TON DEV SOLUTIONS LTD.
 *
 * Licensed under the SOFTWARE EVALUATION License (the "License"); you may not use
 * this file except in compliance with the License.  You may obtain a copy of the
 * License at: https://www.ton.dev/licenses
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific TON DEV software governing permissions and
 * limitations under the License.
 *
 */
function findNetworks(dev, options) {
  var names = options.networks;

  if (!names) {
    return null;
  }

  if (typeof names === 'boolean') {
    return dev.networks;
  }

  return dev.networksFromNames(names.split(','));
}

function compilersWithNetworks(dev, options) {
  var compilers = !!options.compilers;
  var networks = findNetworks(dev, options);

  if (!compilers && !networks) {
    compilers = true;
    networks = dev.networks;
  }

  return {
    compilers: compilers,
    networks: networks || []
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jbGkvb3B0aW9ucy5qcyJdLCJuYW1lcyI6WyJmaW5kTmV0d29ya3MiLCJkZXYiLCJvcHRpb25zIiwibmFtZXMiLCJuZXR3b3JrcyIsIm5ldHdvcmtzRnJvbU5hbWVzIiwic3BsaXQiLCJjb21waWxlcnNXaXRoTmV0d29ya3MiLCJjb21waWxlcnMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFnQkE7O0FBQ0E7O0FBakJBOzs7Ozs7Ozs7Ozs7OztBQW9EQSxTQUFTQSxZQUFULENBQXNCQyxHQUF0QixFQUFnQ0MsT0FBaEMsRUFBd0U7QUFDcEUsTUFBTUMsS0FBSyxHQUFHRCxPQUFPLENBQUNFLFFBQXRCOztBQUNBLE1BQUksQ0FBQ0QsS0FBTCxFQUFZO0FBQ1IsV0FBTyxJQUFQO0FBQ0g7O0FBQ0QsTUFBSSxPQUFPQSxLQUFQLEtBQWlCLFNBQXJCLEVBQWdDO0FBQzVCLFdBQU9GLEdBQUcsQ0FBQ0csUUFBWDtBQUNIOztBQUNELFNBQU9ILEdBQUcsQ0FBQ0ksaUJBQUosQ0FBc0JGLEtBQUssQ0FBQ0csS0FBTixDQUFZLEdBQVosQ0FBdEIsQ0FBUDtBQUNIOztBQUVNLFNBQVNDLHFCQUFULENBQ0hOLEdBREcsRUFFSEMsT0FGRyxFQUdrQjtBQUNyQixNQUFJTSxTQUFTLEdBQUcsQ0FBQyxDQUFDTixPQUFPLENBQUNNLFNBQTFCO0FBRUEsTUFBSUosUUFBUSxHQUFHSixZQUFZLENBQUNDLEdBQUQsRUFBTUMsT0FBTixDQUEzQjs7QUFDQSxNQUFJLENBQUNNLFNBQUQsSUFBYyxDQUFDSixRQUFuQixFQUE2QjtBQUN6QkksSUFBQUEsU0FBUyxHQUFHLElBQVo7QUFDQUosSUFBQUEsUUFBUSxHQUFHSCxHQUFHLENBQUNHLFFBQWY7QUFDSDs7QUFDRCxTQUFPO0FBQ0hJLElBQUFBLFNBQVMsRUFBVEEsU0FERztBQUVISixJQUFBQSxRQUFRLEVBQUVBLFFBQVEsSUFBSTtBQUZuQixHQUFQO0FBSUgiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IDIwMTgtMjAxOSBUT04gREVWIFNPTFVUSU9OUyBMVEQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIFNPRlRXQVJFIEVWQUxVQVRJT04gTGljZW5zZSAodGhlIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlXG4gKiB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGVcbiAqIExpY2Vuc2UgYXQ6IGh0dHBzOi8vd3d3LnRvbi5kZXYvbGljZW5zZXNcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIFRPTiBERVYgc29mdHdhcmUgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKlxuICovXG5cbmltcG9ydCB0eXBlIHsgQ29tcGlsZXJzV2l0aE5ldHdvcmtzIH0gZnJvbSBcIi4uL2RldlwiO1xuaW1wb3J0IHsgRGV2IH0gZnJvbSBcIi4uL2RldlwiO1xuaW1wb3J0IHsgTmV0d29yayB9IGZyb20gXCIuLi9uZXR3b3Jrcy9uZXR3b3Jrc1wiO1xuXG5leHBvcnQgdHlwZSBOZXR3b3Jrc09wdGlvbnMgPSB7XG4gICAgbmV0d29ya3M/OiBib29sZWFuIHwgc3RyaW5nLFxufVxuXG5leHBvcnQgdHlwZSBDb21waWxlcnNPcHRpb25zID0ge1xuICAgIGNvbXBpbGVycz86IGJvb2xlYW4sXG59XG5cbmV4cG9ydCB0eXBlIENvbXBpbGVyc1dpdGhOZXR3b3Jrc09wdGlvbnMgPSBDb21waWxlcnNPcHRpb25zICYgTmV0d29ya3NPcHRpb25zO1xuXG5leHBvcnQgdHlwZSBJbmZvT3B0aW9ucyA9IHtcbiAgICBhdmFpbGFibGU/OiBib29sZWFuXG59XG5cbmV4cG9ydCB0eXBlIFNldHVwT3B0aW9ucyA9IENvbXBpbGVyc1dpdGhOZXR3b3Jrc09wdGlvbnM7XG5cbmV4cG9ydCB0eXBlIFN0YXJ0T3B0aW9ucyA9IENvbXBpbGVyc1dpdGhOZXR3b3Jrc09wdGlvbnM7XG5leHBvcnQgdHlwZSBTdG9wT3B0aW9ucyA9IENvbXBpbGVyc1dpdGhOZXR3b3Jrc09wdGlvbnM7XG5leHBvcnQgdHlwZSBSZXN0YXJ0T3B0aW9ucyA9IENvbXBpbGVyc1dpdGhOZXR3b3Jrc09wdGlvbnM7XG5leHBvcnQgdHlwZSBSZWNyZWF0ZU9wdGlvbnMgPSBDb21waWxlcnNXaXRoTmV0d29ya3NPcHRpb25zO1xuZXhwb3J0IHR5cGUgQ2xlYW5PcHRpb25zID0gQ29tcGlsZXJzV2l0aE5ldHdvcmtzT3B0aW9ucztcbmV4cG9ydCB0eXBlIFVzZU9wdGlvbnMgPSBDb21waWxlcnNXaXRoTmV0d29ya3NPcHRpb25zO1xuZXhwb3J0IHR5cGUgU2V0TmV0d29ya09wdGlvbnMgPSB7XG4gICAgbmV3TmFtZT86IHN0cmluZztcbiAgICBwb3J0Pzogc3RyaW5nLFxuICAgIGRiUG9ydD86IHN0cmluZyxcbn1cblxuZXhwb3J0IHR5cGUgU29sT3B0aW9ucyA9IHtcbiAgICBjbGllbnRMYW5ndWFnZXM/OiBzdHJpbmcsXG4gICAgY2xpZW50TGV2ZWw/OiBzdHJpbmcsXG59XG5cbmZ1bmN0aW9uIGZpbmROZXR3b3JrcyhkZXY6IERldiwgb3B0aW9uczogTmV0d29ya3NPcHRpb25zKTogPyhOZXR3b3JrW10pIHtcbiAgICBjb25zdCBuYW1lcyA9IG9wdGlvbnMubmV0d29ya3M7XG4gICAgaWYgKCFuYW1lcykge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBuYW1lcyA9PT0gJ2Jvb2xlYW4nKSB7XG4gICAgICAgIHJldHVybiBkZXYubmV0d29ya3M7XG4gICAgfVxuICAgIHJldHVybiBkZXYubmV0d29ya3NGcm9tTmFtZXMobmFtZXMuc3BsaXQoJywnKSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjb21waWxlcnNXaXRoTmV0d29ya3MoXG4gICAgZGV2OiBEZXYsXG4gICAgb3B0aW9uczogQ29tcGlsZXJzV2l0aE5ldHdvcmtzT3B0aW9uc1xuKTogQ29tcGlsZXJzV2l0aE5ldHdvcmtzIHtcbiAgICBsZXQgY29tcGlsZXJzID0gISFvcHRpb25zLmNvbXBpbGVycztcblxuICAgIGxldCBuZXR3b3JrcyA9IGZpbmROZXR3b3JrcyhkZXYsIG9wdGlvbnMpO1xuICAgIGlmICghY29tcGlsZXJzICYmICFuZXR3b3Jrcykge1xuICAgICAgICBjb21waWxlcnMgPSB0cnVlO1xuICAgICAgICBuZXR3b3JrcyA9IGRldi5uZXR3b3JrcztcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgY29tcGlsZXJzLFxuICAgICAgICBuZXR3b3JrczogbmV0d29ya3MgfHwgW11cbiAgICB9O1xufVxuXG4iXX0=